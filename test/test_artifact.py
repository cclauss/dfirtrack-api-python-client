# coding: utf-8

"""
    DFIRTrack

    OpenAPI 3 - Documentation of DFIRTrack API  # noqa: E501

    The version of the OpenAPI document: 0.4.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import dfirtrackapi_client
from dfirtrackapi_client.models.artifact import Artifact  # noqa: E501
from dfirtrackapi_client.rest import ApiException

class TestArtifact(unittest.TestCase):
    """Artifact unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Artifact
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = dfirtrackapi_client.models.artifact.Artifact()  # noqa: E501
        if include_optional :
            return Artifact(
                artifact_id = 56, 
                artifact_uuid = '0', 
                artifact_name = '0', 
                artifactstatus = 56, 
                artifacttype = 56, 
                case = 56, 
                system = 56, 
                artifact_md5 = '0', 
                artifact_sha1 = '0', 
                artifact_sha256 = '0', 
                artifact_source_path = '0', 
                artifact_storage_path = '0', 
                artifact_acquisition_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                artifact_requested_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                artifact_create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                artifact_created_by_user_id = 56, 
                artifact_modify_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                artifact_modified_by_user_id = 56
            )
        else :
            return Artifact(
                artifact_name = '0',
                artifacttype = 56,
                system = 56,
                artifact_created_by_user_id = 56,
                artifact_modified_by_user_id = 56,
        )

    def testArtifact(self):
        """Test Artifact"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()

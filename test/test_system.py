# coding: utf-8

"""
    DFIRTrack

    OpenAPI 3 - Documentation of DFIRTrack API  # noqa: E501

    The version of the OpenAPI document: 0.4.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import dfirtrackapi_client
from dfirtrackapi_client.models.system import System  # noqa: E501
from dfirtrackapi_client.rest import ApiException

class TestSystem(unittest.TestCase):
    """System unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test System
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = dfirtrackapi_client.models.system.System()  # noqa: E501
        if include_optional :
            return System(
                system_id = 56, 
                system_uuid = '0', 
                system_name = '0', 
                domain = 56, 
                dnsname = 56, 
                systemstatus = 56, 
                analysisstatus = 56, 
                reason = 56, 
                recommendation = 56, 
                systemtype = 56, 
                ip = [
                    56
                    ], 
                os = 56, 
                osarch = 56, 
                system_lastbooted_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                system_deprecated_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                system_is_vm = True, 
                host_system = 56, 
                company = [
                    56
                    ], 
                location = 56, 
                serviceprovider = 56, 
                contact = 56, 
                tag = [
                    56
                    ], 
                case = [
                    56
                    ], 
                system_api_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                system_create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                system_created_by_user_id = 56, 
                system_modify_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                system_modified_by_user_id = 56, 
                system_export_markdown = True, 
                system_export_spreadsheet = True
            )
        else :
            return System(
                system_name = '0',
                systemstatus = 56,
                system_created_by_user_id = 56,
                system_modify_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                system_modified_by_user_id = 56,
        )

    def testSystem(self):
        """Test System"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
